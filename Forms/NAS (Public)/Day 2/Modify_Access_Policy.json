{
  "layout": {
    "pages": [
      {
        "id": "page_88kt0jlc",
        "sections": [
          {
            "id": "section_volume",
            "fields": [
              {
                "id": "volume",
                "display": "valuePicker",
                "state": {
                  "visible": true,
                  "read-only": true
                },
                "submit": false,
                "signpostPosition": "right-middle"
              }
            ]
          },
          {
            "id": "section_IPsRoot",
            "fields": [
              {
                "id": "IPsRoot",
                "display": "textArea",
                "state": {
                  "visible": true,
                  "read-only": false
                },
                "signpostPosition": "right-middle"
              }
            ]
          },
          {
            "id": "section_IPsRO",
            "fields": [
              {
                "id": "IPsRO",
                "display": "textArea",
                "state": {
                  "visible": true,
                  "read-only": false
                },
                "signpostPosition": "right-middle"
              }
            ]
          },
          {
            "id": "section_IPsRW",
            "fields": [
              {
                "id": "IPsRW",
                "display": "textArea",
                "state": {
                  "visible": true,
                  "read-only": false
                },
                "signpostPosition": "right-middle"
              }
            ]
          }
        ],
        "title": "General",
        "state": {}
      }
    ]
  },
  "schema": {
    "volume": {
      "label": "volume",
      "type": {
        "dataType": "reference",
        "referenceType": "DynamicTypes:XaasNas.Volume"
      },
      "constraints": {
        "required": false
      }
    },
    "IPsRoot": {
      "label": "Root Access Policy",
      "signpost": "<span class=\"red-text\">Root</span> access: list of valid IP addresses (simple/with octet mask/with CIDR mask). One address per line.",
      "type": {
        "dataType": "string"
      },
      "default": {
        "id": "ch.epfl.xaas.customform.cache/getCacheInfoFldAsMultilineString",
        "type": "scriptAction",
        "parameters": [
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "jsonPath": "`access.rules.Root`"
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "filterValue": "``"
          },
          {
            "dtId": "_resource.volumeOut.name",
            "$type": {
              "dataType": "string",
              "isMultiple": false
            }
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "targetTenant": "``"
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "dtName": "_resource.volumeOut.namespace"
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "filterField": "``"
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "jsonSubPath": "``"
          }
        ]
      },
      "constraints": {
        "required": false
      }
    },
    "IPsRO": {
      "label": "RO Access Policy",
      "signpost": "<span class=\"red-text\">Read Only</span> access: list of valid IP addresses (simple/with octet mask/with CIDR mask). One address per line.",
      "type": {
        "dataType": "string"
      },
      "default": {
        "id": "ch.epfl.xaas.customform.cache/getCacheInfoFldAsMultilineString",
        "type": "scriptAction",
        "parameters": [
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "jsonPath": "`access.rules.RO`"
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "filterValue": "``"
          },
          {
            "dtId": "_resource.volumeOut.name",
            "$type": {
              "dataType": "string",
              "isMultiple": false
            }
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "targetTenant": "``"
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "dtName": "_resource.volumeOut.namespace"
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "filterField": "``"
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "jsonSubPath": "``"
          }
        ]
      },
      "constraints": {
        "required": false
      }
    },
    "IPsRW": {
      "label": "RW Access Policy",
      "signpost": "<span class=\"red-text\">Read/Write</span> access: list of valid IP addresses (simple/with octet mask/with CIDR mask). One address per line.",
      "type": {
        "dataType": "string"
      },
      "default": {
        "id": "ch.epfl.xaas.customform.cache/getCacheInfoFldAsMultilineString",
        "type": "scriptAction",
        "parameters": [
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "jsonPath": "`access.rules.RW`"
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "filterValue": "``"
          },
          {
            "dtId": "_resource.volumeOut.name",
            "$type": {
              "dataType": "string",
              "isMultiple": false
            }
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "targetTenant": "``"
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "dtName": "_resource.volumeOut.namespace"
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "filterField": "``"
          },
          {
            "$type": {
              "dataType": "string",
              "isMultiple": false
            },
            "jsonSubPath": "``"
          }
        ]
      },
      "constraints": {
        "required": false
      }
    }
  },
  "options": {
    "externalValidations": [
      {
        "label": "IP_Root",
        "source": {
          "id": "ch.epfl.xaas.nas/checkIP",
          "type": "scriptAction",
          "parameters": [
            {
              "$type": {
                "dataType": "string",
                "isMultiple": false
              },
              "IPs": "IPsRoot"
            }
          ]
        },
        "target": [
          "IPsRoot"
        ]
      },
      {
        "label": "IP_RO",
        "source": {
          "id": "ch.epfl.xaas.nas/checkIP",
          "type": "scriptAction",
          "parameters": [
            {
              "$type": {
                "dataType": "string",
                "isMultiple": false
              },
              "IPs": "IPsRO"
            }
          ]
        },
        "target": [
          "IPsRO"
        ]
      },
      {
        "label": "IP_RW",
        "source": {
          "id": "ch.epfl.xaas.nas/checkIP",
          "type": "scriptAction",
          "parameters": [
            {
              "$type": {
                "dataType": "string",
                "isMultiple": false
              },
              "IPs": "IPsRW"
            }
          ]
        },
        "target": [
          "IPsRW"
        ]
      }
    ]
  }
}
